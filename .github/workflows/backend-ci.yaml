name: ci-backend-workflow

on:
  # Manual trigger using the workflow_dispatch event
  workflow_dispatch:

  # Automatic trigger on push events to the main branch
  push:
    branches:
      - master
    paths:
      - 'backend/**'

#Use a matrix strategy to use Node.js versions 16.x and 18.x
jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      # Check out the code from the repository.
      - uses: actions/checkout@v3

      # Set up a Node.js environment using the specified node version.
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      # Install the dependencies.
      - run: cd backend && python -m pip install --upgrade pip

      - run: cd backend && pip install pipenv

      - run: cd backend && pipenv install --dev

      # Run the linter.
      - run: cd backend && pipenv run lint

      # Send a console message at completion.
      - run: |
          echo "Hello ${{github.actor}}. You pushed to ${{github.repository}} at $(date)."

  test:
    runs-on: ubuntu-latest

    steps:
      # Check out the code from the repository.
      - uses: actions/checkout@v3

      # Set up a Node.js environment using the specified node version.
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      # Install the dependencies.
      - run: cd backend && python -m pip install --upgrade pip

      - run: cd backend && pip install --user pipenv

      - run: cd backend && pipenv sync

      # Run the linter.
      - run: cd backend && pipenv run test

      # Send a console message at completion.
      - run: |
          echo "Hello ${{github.actor}}. You pushed to ${{github.repository}} at $(date)."

  build:
    needs: [ lint,test ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

#      - name: Configure AWS Credentials
#        uses: aws-actions/configure-aws-credentials@v2
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
#          aws-region: us-east-1
#
#      - name: Login to Amazon ECR
#        id: login-ecr
#        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Backend
#        env:
#          REGISTRY: 570414064424.dkr.ecr.us-east-1.amazonaws.com
#          REPOSITORY: movie-backend
#          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd backend && docker build
