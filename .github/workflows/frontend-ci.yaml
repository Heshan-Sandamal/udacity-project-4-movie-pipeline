name: ci-frontend-workflow

on:
  # Manual trigger using the workflow_dispatch event
  workflow_dispatch:

  # Automatic trigger on push events to the main branch
  push:
    branches:
      - master
    paths:
      - 'frontend/**'

env:
  # Setting an environment variable with the value of a configuration variable
  FRONTEND_ECR_URL: ${{ vars.FRONTEND_ECR_URL }}
  REACT_APP_MOVIE_API_URL: ${{ vars.REACT_APP_MOVIE_API_URL }}

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      # Check out the code from the repository.
      - uses: actions/checkout@v3

      # Set up a Node.js environment using the specified node version.
      - uses: actions/setup-node@v3
        with:
          node-version: "16.x"

      # clear cache
      - run: cd frontend && npm cache clean --force

      # Install the dependencies.
      - run: cd frontend && npm ci

      # Run the linter.
      - run: cd frontend && npm run lint .

      # Send a console message at completion.
      - run: |
          echo "List step completed"

  test:
    runs-on: ubuntu-latest

    steps:
      # Check out the code from the repository.
      - uses: actions/checkout@v3

      # Set up a Node.js environment using the specified node version.
      - uses: actions/setup-node@v3
        with:
          node-version: "16.x"

      # clear cache
      - run: cd frontend && npm cache clean --force

      # Install the dependencies.
      - run: cd frontend && npm ci

      # Run the tests.
      - run: cd frontend && npm run test

      # Send a console message at completion.
      - run: |
          echo "Test step completed"

  build:
    needs: [ lint,test ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Set up a Node.js environment using the specified node version.
      - uses: actions/setup-node@v3
        with:
          node-version: "16.x"

      # clear cache
      - run: cd frontend && npm cache clean --force

      # Install the dependencies.
      - run: cd frontend && npm ci

      # Run the tests.
      - run: cd frontend && npm run test

      - name: Build Application
        run: |
          cd frontend && docker build --build-arg REACT_APP_MOVIE_API_URL=$REACT_APP_MOVIE_API_URL

        
